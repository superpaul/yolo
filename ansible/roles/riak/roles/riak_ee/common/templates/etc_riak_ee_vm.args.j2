## Name of the riak node
-name riak@{{ ip_addr }}

## Cookie for distributed erlang.  All nodes in the same cluster
## should use the same cookie or they will not be able to communicate.
-setcookie riak

## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
## (Disabled by default..use with caution!)
##-heart

## Enable kernel poll and a few async threads
+K true
+A 64

## Treat error_logger warnings as warnings
+W w

## Increase number of concurrent ports/sockets
-env ERL_MAX_PORTS 64000

## Tweak GC to run more often 
-env ERL_FULLSWEEP_AFTER 0

## Set the location of crash dumps
-env ERL_CRASH_DUMP /var/log/riak/erl_crash.dump

## Raise the ETS table limit
-env ERL_MAX_ETS_TABLES 256000

{% if ansible_processor_cores == 'NA' or ansible_processor_cores == 1 %}
## Force the erlang VM to use SMP
-smp enable
{% endif %}

## For nodes with many busy_dist_port events, Basho recommends
## raising the sender-side network distribution buffer size.
## 32MB may not be sufficient for some workloads and is a suggested
## starting point.
## The Erlang/OTP default is 1024 (1 megabyte).
## See: http://www.erlang.org/doc/man/erl.html#%2bzdbbl
+zdbbl 65536

## Raise the default erlang process limit
+P 256000

## Erlang VM scheduler tuning (Prerequisite: patched VM from Basho as
## part of the Riak EDS package)
+sfwi 500

# Set scheduler wakeup threshold
+swt very_low

-kernel net_ticktime 10

## Begin SSL distribution items, DO NOT DELETE OR EDIT THIS COMMENT

## To enable SSL encryption of the Erlang intra-cluster communication,
## un-comment the three lines below and make certain that the paths
## point to correct PEM data files.  See docs TODO for details.

## -proto_dist inet_ssl
## -ssl_dist_opt client_certfile "/etc/riak/erlclient.pem"
## -ssl_dist_opt server_certfile "/etc/riak/erlserver.pem"

## End SSL distribution items, DO NOT DELETE OR EDIT THIS COMMENT
